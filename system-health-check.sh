#!/bin/bash

# OCI System Health Check Script
# „Åì„ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅØÊñ∞„Åó„ÅÑÁõ£Ë¶ñ„Çπ„ÇØ„É™„Éó„ÉàËøΩÂä†Ââç„ÅÆ„Ç∑„Çπ„ÉÜ„É†ÂÅ•ÂÖ®ÊÄß„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Åæ„Åô

OCI_HOST="138.2.28.222"
SSH_KEY="~/.ssh/id_rsa"

echo "=== OCI System Health Assessment ==="
echo "Target: $OCI_HOST"
echo "Timestamp: $(date)"
echo ""

# 1. Âü∫Êú¨„Ç∑„Çπ„ÉÜ„É†ÊÉÖÂ†±
echo "1. System Overview"
echo "=================="
ssh -i "$SSH_KEY" opc@$OCI_HOST '
echo "Uptime: $(uptime)"
echo "Load Average: $(cat /proc/loadavg)"
echo "CPU Cores: $(nproc)"
echo ""
'

# 2. „É°„É¢„É™‰ΩøÁî®Áä∂Ê≥Å
echo "2. Memory Analysis"
echo "=================="
ssh -i "$SSH_KEY" opc@$OCI_HOST '
echo "=== Current Memory Usage ==="
free -h
echo ""
echo "=== Swap Status ==="
swapon --show
echo ""
echo "=== Memory Pressure Indicators ==="
ps aux --sort=-%cpu | head -5
echo ""
echo "=== kswapd0 Process (Memory Management) ==="
ps aux | grep kswapd | grep -v grep
echo ""
'

# 3. ÁèæÂú®„ÅÆCron„Ç∏„Éß„ÉñÂàÜÊûê
echo "3. Cron Job Analysis"
echo "===================="
ssh -i "$SSH_KEY" opc@$OCI_HOST '
echo "=== Current Cron Schedule ==="
crontab -l | grep -v "^#" | grep -v "^$"
echo ""
echo "=== Cron Job Frequency Analysis ==="
crontab -l | grep -v "^#" | grep -v "^$" | cut -d" " -f1-5 | sort | uniq -c
echo ""
'

# 4. „Éá„Ç£„Çπ„ÇØ‰ΩøÁî®Èáè
echo "4. Disk Usage"
echo "============="
ssh -i "$SSH_KEY" opc@$OCI_HOST '
echo "=== Disk Space ==="
df -h
echo ""
echo "=== Large Log Files ==="
find /home/opc /tmp -name "*.log" -size +1M -exec ls -lah {} \; 2>/dev/null | head -10
echo ""
'

# 5. „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Éó„É≠„Çª„ÇπÂàÜÊûê
echo "5. Process Analysis"
echo "==================="
ssh -i "$SSH_KEY" opc@$OCI_HOST '
echo "=== Top CPU Consumers ==="
ps aux --sort=-%cpu | head -10
echo ""
echo "=== Top Memory Consumers ==="
ps aux --sort=-%mem | head -10
echo ""
echo "=== Python Processes ==="
ps aux | grep python | grep -v grep
echo ""
'

# 6. „Ç∑„Çπ„ÉÜ„É†ÂÅ•ÂÖ®ÊÄßË©ï‰æ°
echo "6. Health Assessment"
echo "===================="

# „É°„É¢„É™„ÉÅ„Çß„ÉÉ„ÇØ
MEMORY_AVAILABLE=$(ssh -i "$SSH_KEY" opc@$OCI_HOST 'free | grep "Mem:" | awk "{print \$7}"')
MEMORY_AVAILABLE_MB=$((MEMORY_AVAILABLE / 1024))

# „Çπ„ÉØ„ÉÉ„Éó„ÉÅ„Çß„ÉÉ„ÇØ  
SWAP_USED=$(ssh -i "$SSH_KEY" opc@$OCI_HOST 'free | grep "Swap:" | awk "{print \$3}"')
SWAP_USED_MB=$((SWAP_USED / 1024))

# Load Average„ÉÅ„Çß„ÉÉ„ÇØ
LOAD_15MIN=$(ssh -i "$SSH_KEY" opc@$OCI_HOST 'cat /proc/loadavg | awk "{print \$3}"' | cut -d. -f1)

echo "Available Memory: ${MEMORY_AVAILABLE_MB}MB"
echo "Swap Usage: ${SWAP_USED_MB}MB"  
echo "Load Average (15min): ${LOAD_15MIN}"
echo ""

# ÂÅ•ÂÖ®ÊÄßÂà§ÂÆö
echo "=== Health Status ==="
if [ "$MEMORY_AVAILABLE_MB" -lt 100 ]; then
    echo "‚ùå CRITICAL: Memory available < 100MB"
elif [ "$MEMORY_AVAILABLE_MB" -lt 300 ]; then
    echo "‚ö†Ô∏è  WARNING: Memory available < 300MB"
else
    echo "‚úÖ OK: Memory status good (${MEMORY_AVAILABLE_MB}MB available)"
fi

if [ "$SWAP_USED_MB" -gt 1000 ]; then
    echo "‚ùå CRITICAL: Swap usage > 1GB"
elif [ "$SWAP_USED_MB" -gt 500 ]; then
    echo "‚ö†Ô∏è  WARNING: Swap usage > 500MB"  
else
    echo "‚úÖ OK: Swap usage acceptable (${SWAP_USED_MB}MB)"
fi

if [ "$LOAD_15MIN" -gt 15 ]; then
    echo "‚ùå CRITICAL: Load average > 15"
elif [ "$LOAD_15MIN" -gt 5 ]; then
    echo "‚ö†Ô∏è  WARNING: Load average > 5"
else
    echo "‚úÖ OK: Load average acceptable (${LOAD_15MIN})"
fi

echo ""

# 7. Êñ∞„Çπ„ÇØ„É™„Éó„ÉàËøΩÂä†Êé®Â•®‰∫ãÈ†Ö
echo "7. Recommendations for New Scripts"
echo "=================================="

if [ "$MEMORY_AVAILABLE_MB" -gt 300 ] && [ "$SWAP_USED_MB" -lt 200 ] && [ "$LOAD_15MIN" -lt 3 ]; then
    echo "‚úÖ System is ready for new monitoring scripts"
    echo "üìã Recommended cron intervals:"
    echo "   - Use 15-minute intervals (*/15 * * * *)"
    echo "   - Stagger minutes to avoid simultaneous execution"
    echo "   - Current active minutes: $(ssh -i "$SSH_KEY" opc@$OCI_HOST 'crontab -l | grep -v "^#" | cut -d" " -f1 | grep "^\*" | sort | uniq')"
elif [ "$MEMORY_AVAILABLE_MB" -gt 200 ] && [ "$SWAP_USED_MB" -lt 500 ]; then
    echo "‚ö†Ô∏è  System can handle new scripts with caution"
    echo "üìã Requirements:"
    echo "   - Use 30-minute intervals minimum"
    echo "   - Monitor memory usage closely"
    echo "   - Consider optimizing existing scripts first"
else
    echo "‚ùå System NOT ready for additional scripts"
    echo "üìã Actions required:"
    echo "   - Optimize existing cron frequencies"
    echo "   - Implement log rotation"
    echo "   - Consider reducing monitoring intervals"
fi

echo ""
echo "=== Health Check Complete ==="
echo "Run this script before adding any new monitoring systems."